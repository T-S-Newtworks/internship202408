@model List<TsnEducation2024.Models.MyTodoItem>
@{
    ViewBag.Title = "Todoリスト";
}
<main aria-labellebdy="title">
    <div class="row">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-fade d-flex flex-row justify-content-between" role="alert">
                <span>
                    @TempData["SuccessMessage"]
                </span>
                <button type="button" class="btn-close" aria-label="Close"></button>
            </div>
        }
        <div class="d-flex flex-row justify-content-between mb-3">
            <h3>MyTodo</h3>
            @Html.ActionLink("サンプル一覧画面へ戻る", "Sample", "Home", new { area = "" }, new { @class = "sample-link" })
        </div>
        <form>
            <div class="d-flex flex-row gap-2">
                <input class="form-control" type="text" id="todoTitle" placeholder="タイトルを入力" />
                <button class="btn btn-primary " type="button" id="insertbutton">TODO追加</button>
            </div>
        </form>
        <div id="todoListTable">
            @* MyTodo? *@
            @using (Html.BeginForm("SaveTodoItems", "Todo", FormMethod.Post))
            {<div style="display:flex; flex-direction:row; justify-content:flex-end;">
                    <div>
                        <button class="btn btn-primary mb-2" type="button" id="todosearch">検索画面へ</button>
                        <button class="btn btn-primary mb-2" type="button" id="todosave">保存</button>
                    </div>
                </div>
                <div style="display:flex; flex-direction:row; justify-content:flex-end;">
                    <button class="btn btn-primary mb-2.left-margin-button " type="button" id="resultTodo">結果画面へ</button>
                </div>
                <div style="display:flex; flex-direction:row; justify-content:space-between;">
                    <h4>TODOリスト一覧</h4>
                </div>
                <div class="weekdays">
                    <a href="@Url.Action("Day","Todo",new {day = "Monday" })" class="weekday-link @((ViewBag.SelectedDay == "Monday") ? "active" : "")">月</a>
                    <a href="@Url.Action("Day","Todo",new {day = "Tuesday" })" class="weekday-link @((ViewBag.SelectedDay == "Tuesday") ? "active" : "")">火</a>
                    <a href="@Url.Action("Day","Todo",new {day = "Wednesday" })" class="weekday-link @((ViewBag.SelectedDay == "Wednesday") ? "active" : "")">水</a>
                    <a href="@Url.Action("Day","Todo",new {day = "Thursday" })" class="weekday-link @((ViewBag.SelectedDay == "Thursday") ? "active" : "")">木</a>
                    <a href="@Url.Action("Day","Todo",new {day = "Friday" })" class="weekday-link @((ViewBag.SelectedDay == "Friday") ? "active" : "")">金</a>
                    <a href="@Url.Action("Day","Todo",new {day = "Saturday" })" class="weekday-link @((ViewBag.SelectedDay == "Saturday") ? "active" : "")">土</a>
                    <a href="@Url.Action("Day","Todo",new {day = "Sunday" })" class="weekday-link @((ViewBag.SelectedDay == "Sunday") ? "active" : "")">日</a>
                    <a href="@Url.Action("Day","Todo",new {day = "list" })" class="weekday-link @((ViewBag.SelectedDay == "list") ? "active" : "")">一覧</a>
                </div>
                <label class="checkbox-label">
                    結果が確定したものの表示
                    <input type="checkbox" name="myCheckbox" value="true" checked />
                </label>
                <table class="table table-bordered" id="todoTable">
                    <thead>
                        <tr>
                            <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">日付</font></font></th>
                            <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">期限</font></font></th>
                            <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">タイトル</font></font></th>
                            <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">説明</font></font></th>
                            <th scope="col"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">結果</font></font></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            @{string style = string.Empty;
                                if (Model.Any())
                                {
                                    style = "display:none;";
                                }
                                <td colspan="5" id="defaultFirstRow" style="text-align: center; @style">表示する項目がありません。</td>
                            }
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <span class="todoContents">@item.Day</span>
                                </td>
                                <td>
                                    <span class="todoContents">@item.Time</span>
                                </td>
                                <td>
                                    <span class="todoContents">@item.Title</span>
                                </td>
                                <td>
                                    <span class="todoContents">@item.Description</span>
                                </td>
                                <td>
                                    <span class="todoContents">@item.Result</span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
             }
        </div>
    </div>
</main>
@section scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            // 追加ボタンのクリックイベント設定
            $('#insertbutton').click(function (e) {
                // post処理防止
                e.preventDefault();

                // 追加画面へ遷移
                window.location.href = 'http://localhost:44369/MyTodo/MyTodoInsert'; // 遷移先のURLを指定
            });

            // 検索ボタンのクリックイベント設定
            $('#searchSubmit').click(function (e) {
                // post処理防止
                e.preventDefault();

                // 検索画面へ遷移
                window.location.href = '/Todo/Search'; // 検索画面のURLを指定

                // 入力テキストを空にする
                $('#todoTitle').val('');
            });

            // 結果ボタンのクリックイベント設定
            $('#resultSubmit').click(function (e) {
                // post処理防止
                e.preventDefault();

                // 結果画面へ遷移
                window.location.href = '/Todo/Result'; // 結果画面のURLを指定

                // 入力テキストを空にする
                $('#todoTitle').val('');
            });

            document.addEventListener('DOMContentLoaded', function () {
                // デフォルトで「一覧」リンクにクラスを追加
                document.getElementById('defaultLink').classList.add('active');
            });

            // 保存ボタンクリック処理
            $('#saveTodo').click(function (e) {
                // tbodyのtr要素(TODOアイテム行)を取得
                var todoItems = $('#todoTable tbody tr');
                // 行がない場合は終了
                if (todoItems.length === 0) {
                    return false;
                }
                var postItemIndex = 0;
                // 行ごとのデータをPOSTメソッドで送れるように加工する
                for (let i = 0; i < todoItems.length; i++) {
                    var todoValues = $(todoItems[i]).children("td");
                    // td要素(セル)が一つしかない行はデフォルト行なので、処理しない
                    if (todoValues.length === 1) {
                        continue;
                    }
                    // 日付のデータを作成
                    var postDay = $('<input>').attr({
                        type: 'hidden',
                        name: `todoItems[${postItemIndex}].Day`,
                        value: $(todoValues[0]).find('span')[0].innerHTML
                    });
                    // 期限のデータを作成
                    var postTime = $('<input>').attr({
                        type: 'hidden',
                        name: `todoItems[${postItemIndex}].Time`,
                        value: $(todoValues[1]).find('span')[1].innerHTML
                    });
                    // タイトルのデータを作成
                    var postTitle = $('<input>').attr({
                        type: 'hidden',
                        name: `todoItems[${postItemIndex}].Title`,
                        value: $(todoValues[2]).find('span')[2].innerHTML
                    });
                    // 説明のデータを作成
                    var postDescription = $('<input>').attr({
                        type: 'hidden',
                        name: `todoItems[${postItemIndex}].Description`,
                        value: $(todoValues[3]).find('span')[3].innerHTML
                    });
                    // 結果のデータを作成
                    var postResult = $('<input>').attr({
                        type: 'hidden',
                        name: `todoItems[${postItemIndex}].Result`,
                        value: $(todoValues[4]).find('span')[4].innerHTML
                    });
                    //繰り返しデータの作成
                    var postRepeat = $('<input>').attr({
                        type: 'hidden',
                        name: `todoItems[${postItemIndex}].Result`,
                        value: $(todoValues[4]).find('span')[4].innerHTML
                    });

                    //// データを追加する
                    //$('form').append(postDay);
                    //$('form').append(postTime);
                    //$('form').append(postTitle);
                    //$('form').append(postDescription);
                    //$('form').append(postResult);
                    //postItemIndex++;
                }

                // フォームの送信
                $('form').submit();
            });

            // ×ボタン押下処理
            $('.btn-close').click(function (e) {
                var closeElem = $(this).closest('div');
                closeElem.remove();
            });
        });

        function addTasks(task) {
            // 追加ボタン押下時の処理
            var defaultFirstRow = $('#defaultFirstRow');

            // デフォルト行を取得
            defaultFirstRow.hide();
            // tbody要素を取得
            var todoTableBody = $('#todoTable tbody')[0];
            // tbody要素に最下行を追加
            var trElem = todoTableBody.insertRow(-1);
            // td要素(セル要素)を追加
            var DayCellElem = trElem.insertCell(0);
            var TimeCellElem = trElem.insertCell(1);
            var TitleCellElem = trElem.insertCell(2);
            var DescriptionCellElem = trElem.insertCell(3);
            var ResultCellElem = trElem.insertCell(4);
            // 日付列

            // 期限列

            // タイトル列
            var titleCell = document.createElement('span');
            titleCell.className = "todotit";
            titleCell.innerHTML = task;
            TitleCellElem.appendChild(titleCell);
            // 説明列
            var descriptionCell = document.createElement('span');
            descriptionCell.className = "tododes";
            descriptionCell.innerHTML = task;
            DescriptionCellElem.appendChild(descriptionCell);
            // 結果列
        }
    </script>
}
<style>
    .sample-link {
        text-decoration: underline;
        padding-left: calc(var(--bs-gutter-x)* 0.5);
        font-size: 1.5rem;
        width: auto;
    }

    #todoListTable {
        width: 100%;
        height: 400px;
        border-radius: 1rem;
        margin-top: 2rem;
    }

    .table-bordered th:first-child {
        width: 10%;
        min-width: 80px;
    }

    .table-bordered td:first-child {
        width: 10%;
        min-width: 80px;
    }

    .todoContents {
        vertical-align: inherit;
    }

    .left-margin-button {
        display: flex;
        justify-content: flex-start; /* ここで左に寄せたい距離を指定 */
    }

    .weekdays {
        display: flex;
        flex-wrap: wrap; /* 複数行にする場合 */
        justify-content: center; /* 水平中央揃え */
        margin-bottom: 20px; /* 下に少しスペースを追加 */
        position: relative;
    }

        .weekdays a {
            margin: 0 8px; /* 左右に8pxのスペースを追加 */
            font-weight: bold; /* テキストを太字に */
        }

    .weekday-link {
        text-decoration: none;
        color: blue; /* 通常のリンクの色 */
        padding: 5px 10px;
        margin: 0 5px;
        border-radius: 3px;
    }

        .weekday-link.active {
            color: purple; /* 選択されたリンクの色 */
            font-weight: bold;
        }

    .checkbox-label {
        display: block;
        text-align: center; /* チェックボックスを中央に配置 */
        margin-top: 0px; /* 上にスペースを追加 */
    }

        .checkbox-label input {
            margin-left: 5px; /* チェックボックスとラベルの間にスペースを追加 */
        }

    /*        .alert-fade {
        transition: opacity 3s;
        }
        */
</style>
