@model List<TsnEducation2024.Models.MyTodoItem>
@{
    ViewBag.Title = "Todoリスト";
}
<main aria-labelledby="title">
    <div class="row">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-fade d-flex flex-row justify-content-between" role="alert">
                <span>
                    @TempData["SuccessMessage"]
                </span>
                <button type="button" class="btn-close" aria-label="Close"></button>
            </div>
        }
        <div class="d-flex flex-row justify-content-between mb-3">
            <h3>MyTodo</h3>
            @Html.ActionLink("サンプル一覧画面へ戻る", "Sample", "Home", new { area = "" }, new { @class = "sample-link" })
        </div>
        <form>
            <div class="d-flex flex-row justify-content-end gap-2">
                <button class="btn btn-primary" type="button" id="insertbutton">TODO追加</button>
                <button class="btn btn-primary" type="button" id="todosearch">検索画面へ</button>
                @*<button class="btn btn-primary" type="button" id="todosave">保存</button>*@
            </div>
        </form>
        <div id="todoListTable">
            @using (Html.BeginForm("SaveTodoItems", "Todo", FormMethod.Post))
            {
                <!-- 上にスペースを持たせるためにマージンを調整 -->
                <div class="d-flex flex-column align-items-end mb-2">
                    <button class="btn btn-primary" type="button" id="resultTodo">結果画面へ</button>
                </div>
                <div style="display:flex; flex-direction:row; justify-content:space-between;">
                    <h4>TODOリスト一覧</h4>
                </div>
                <div class="weekdays">
                    <a href="@Url.Action(" Day","Todo",new {day="Monday" })" class="weekday-link @((ViewBag.SelectedDay == " Monday") ? "active" : "" )">月</a>
                    <a href="@Url.Action(" Day","Todo",new {day="Tuesday" })" class="weekday-link @((ViewBag.SelectedDay == " Tuesday") ? "active" : "" )">火</a>
                    <a href="@Url.Action(" Day","Todo",new {day="Wednesday" })" class="weekday-link @((ViewBag.SelectedDay == " Wednesday") ? "active" : "" )">水</a>
                    <a href="@Url.Action(" Day","Todo",new {day="Thursday" })" class="weekday-link @((ViewBag.SelectedDay == " Thursday") ? "active" : "" )">木</a>
                    <a href="@Url.Action(" Day","Todo",new {day="Friday" })" class="weekday-link @((ViewBag.SelectedDay == " Friday") ? "active" : "" )">金</a>
                    <a href="@Url.Action(" Day","Todo",new {day="Saturday" })" class="weekday-link @((ViewBag.SelectedDay == " Saturday") ? "active" : "" )">土</a>
                    <a href="@Url.Action(" Day","Todo",new {day="Sunday" })" class="weekday-link @((ViewBag.SelectedDay == " Sunday") ? "active" : "" )">日</a>
                    <a href="@Url.Action("MyTodoIndex", "MyTodo", new { area = "" })" class="weekday-link" id="all">一覧</a>
                </div>
                <label class="checkbox-label">
                    結果が確定したものの表示
                    <input type="checkbox" name="myCheckbox" value="true" checked />
                </label>
                <table class="table table-bordered" id="todoTable">
                    <thead>
                        <tr>
                            <th scope="col">日付</th>
                            <th scope="col">期限</th>
                            <th scope="col">タイトル</th>
                            <th scope="col">説明</th>
                            <th scope="col">結果</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            @{string style = string.Empty;
                                if (Model.Any())
                                {
                                    style = "display:none;";
                                }
                                <td colspan="5" id="defaultFirstRow" style="text-align: center; @style">表示する項目がありません。</td>
                            }
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Day.ToString("yyyy-MM-dd")</td>
                                <td>@item.Time.ToString("HH:mm")</td>
                                <td>@item.Title</td>
                                <td>@item.Description</td>
                                <td>
                                    <button class="maru" onclick="updateResult(@item.Id,true)">〇</button>
                                    <button class="batu" onclick="updateResult(@item.Id,false)">×</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</main>
@section scripts
    {
    <script type="text/javascript">$(document).ready(function () {
            // 追加ボタンのクリックイベント設定
            $('#insertbutton').click(function (e) {
                // post処理防止
                e.preventDefault();

                // 追加画面へ遷移
                window.location.href = '/MyTodo/MyTodoInsert'; // 遷移先のURLを指定
            });

            // 検索ボタンのクリックイベント設定
             $('#todosearch').click(function (e) {
                // post処理防止
                e.preventDefault();

                // 検索画面へ遷移
                window.location.href = '/MyTodo/MyTodoSearch'; // 検索画面のURLを指定
                                // 入力テキストを空にする
                $('#todoTitle').val('');
                document.getElementById('defaultLink').classList.add('active');
             });

     //       document.getElementById('todosave').addEventListener('click', function () {
     //           var tableBody = document.querySelector('#todoTable tbody');
     //           var todoItems = tableBody.querySelectorAll('tr');

     //           if (todoItems.length === 0) {
     //               return false;
     //           }
     //                       var form = document.getElementById('todoForm');
     //           form.action = '/MyTodo/SaveTodoItems'; // 正しい URL に設定
     //           form.method = 'post'; // メソッドを POST に設定


     //           // 既存の隠しフィールドを削除
     //           var existingHiddenFields = form.querySelectorAll('input[type="hidden"]');
     //           existingHiddenFields.forEach(function (field) {
     //               field.remove();
     //           });

     //           todoItems.forEach(function (row, index) {
     //               var todoValues = row.children;

     //               if (todoValues.length > 1) {
     //                   var postDay = document.createElement('input');
     //                   postDay.type = 'hidden';
     //                   postDay.name = `todoItems[${index}].Day`;
     //                   postDay.value = todoValues[0].querySelector('input[type="date"]').value;

     //                   var postTime = document.createElement('input');
     //                   postTime.type = 'hidden';
     //                   postTime.name = `todoItems[${index}].Time`;
     //                   postTime.value = todoValues[1].querySelector('input[type="time"]').value;

     //                   //var postTime = document.createElement('input');
     //                   //postTime.type = 'hidden';
     //                   //postTime.name = `todoItems[${index}].time1`;
     //                   //postTime.value = todoValues[1].querySelector('input[type="time1"]').value;

     //                   var postTitle = document.createElement('input');
     //                   postTitle.type = 'hidden';
     //                   postTitle.name = `todoItems[${index}].Title`;
     //                   postTitle.value = todoValues[2].querySelector('input[type="text"]').value;

     //                   var postDescription = document.createElement('input');
     //                   postDescription.type = 'hidden';
     //                   postDescription.name = `todoItems[${index}].Description`;
     //                   postDescription.value = todoValues[3].querySelector('textarea').value;

     //                   var postRepeat = document.createElement('input');
     //                   postRepeat.type = 'hidden';
     //                   postRepeat.name = `todoItems[${index}].Repeat`;
     //                   postRepeat.value = todoValues[4].querySelector('input[type="text"]').value;

     //                   form.appendChild(postDay);
     //                   form.appendChild(postTime);
     //                   form.appendChild(postTitle);
     //                   form.appendChild(postDescription);
     //                   form.appendChild(postRepeat);
     //               }
     //           });
     //form.submit();
     //    });
      // ×ボタン押下処理
            $('.btn-close').click(function (e) {
                var closeElem = $(this).closest('div');
                closeElem.remove();
            });
        });

        function addTasks(task) {
            // 追加ボタン押下時の処理
            var defaultFirstRow = $('#defaultFirstRow');

            // デフォルト行を取得
            defaultFirstRow.hide();
            // tbody要素を取得
            var todoTableBody = $('#todoTable tbody')[0];
            // tbody要素に最下行を追加
            var trElem = todoTableBody.insertRow(-1);
            // td要素(セル要素)を追加
            var DayCellElem = trElem.insertCell(0);
            var TimeCellElem = trElem.insertCell(1);
            var TitleCellElem = trElem.insertCell(2);
            var DescriptionCellElem = trElem.insertCell(3);
            var ResultCellElem = trElem.insertCell(4);
            // 日付列

            // 期限列

            // タイトル列
            var titleCell = document.createElement('span');
            titleCell.className = "todotit";
            titleCell.innerHTML = task;
            TitleCellElem.appendChild(titleCell);
            // 説明列
            var descriptionCell = document.createElement('span');
            descriptionCell.className = "tododes";
            descriptionCell.innerHTML = task;
            DescriptionCellElem.appendChild(descriptionCell);
            // 結果列
        }</script>
}
<style>
    .sample-link {
        text-decoration: underline;
        padding-left: calc(var(--bs-gutter-x)* 0.5);
        font-size: 1.5rem;
        width: auto;
    }

    #todoListTable {
        width: 100%;
        height: 400px;
        border-radius: 1rem;
        margin-top: 2rem;
    }

    .table-bordered th:first-child {
        width: 10%;
        min-width: 80px;
    }

    .table-bordered td:first-child {
        width: 10%;
        min-width: 80px;
    }

    .todoContents {
        vertical-align: inherit;
    }

    .left-margin-button {
        display: flex;
        justify-content: flex-start; /* ここで左に寄せたい距離を指定 */
    }

    .weekdays {
        display: flex;
        flex-wrap: wrap; /* 複数行にする場合 */
        justify-content: center; /* 水平中央揃え */
        margin-bottom: 20px; /* 下に少しスペースを追加 */
        position: relative;
    }

        .weekdays a {
            margin: 0 8px; /* 左右に8pxのスペースを追加 */
            font-weight: bold; /* テキストを太字に */
        }

    .weekday-link {
        text-decoration: none;
        color: blue; /* 通常のリンクの色 */
        padding: 5px 10px;
        margin: 0 5px;
        border-radius: 3px;
    }

        .weekday-link.active {
            color: purple; /* 選択されたリンクの色 */
            font-weight: bold;
        }

    .checkbox-label {
        display: block;
        text-align: center; /* チェックボックスを中央に配置 */
        margin-top: 0px; /* 上にスペースを追加 */
    }

        .checkbox-label input {
            margin-left: 5px; /* チェックボックスとラベルの間にスペースを追加 */
        }

    .maru, .batu {
        border: none;
        background-color: transparent;
        font-size: 1.5em;
        cursor: pointer;
    }

    .maru {
        color: green;
    }

    .batu {
        color: red;
    }

    /*        .alert-fade {
            transition: opacity 3s;
            }
            */
</style>
